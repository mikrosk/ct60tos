OUTPUT_ARCH(m68k)
SEARCH_DIR(/lib); SEARCH_DIR(/usr/lib); SEARCH_DIR(/usr/local/lib); SEARCH_DIR(/usr/m68k-atari-mint/lib);
PROVIDE (__stack = 0);
STARTUP (obj_cf/header.o);
MEMORY
{
  ram (rw) : ORIGIN = 0x03F00000, LENGTH = 0x100000
  flash (rx) : ORIGIN = 0xEA0000, LENGTH = 0x60000
  freertosram (rwx) : ORIGIN = 0x03E01008, LENGTH = 0xEFF8
  flash2 (rx) : ORIGIN = 0xFC0000, LENGTH = 0x30000
}
SECTIONS
{
  ___MBAR = 0xFF000000;
  ___SYS_SRAM = ___MBAR + 0x00010000;
  ___SYS_SRAM_SIZE = (32 * 1024);
  ___MCDAPI_START = ___SYS_SRAM;
  ___MCDAPI_SIZE = (12 * 1024);
  ___PARAMS = 0xFF802000; /* use dBUG parameters */
  ___PARAMS_SIZE = 0x50;
  ___SDRAM_SIZE = 0x03F00000; /* 64MB - 1MB */
  ___NO_CACHE_MEMORY_BASE = 0x00F10000;
  ___NO_CACHE_MEMORY_SIZE = 0x00090000;
  ___FREERTOS_BASE = 0x03E10000; /* pvPortMalloc() and vPortFree() */ 
  ___FREERTOS_SIZE = 0x000F0000; /* pvPortMalloc() and vPortFree() */ 
  ___LWIP_SIZE = 0x00400000;     /* pvPortMalloc2() and vPortFree2() */ 
  ___LWIP_BASE = ___SDRAM_SIZE - 0x00100000 - ___LWIP_SIZE; /* pvPortMalloc2() and vPortFree2() */ 
  _pxCurrentTCB = 0x03E01000;
  _tid_TOS = 0x03E01004;
  _bufl = 0x4B2;
  _run = 0x6EE4; /* TOS 4.04 PD for BDOS */
  _d_rezword = 0xA4EA; /* AES, for videocnf.c */
  .data :
  {
    obj_cf/freertos/tasks.o (.text .data)
    obj_cf/freertos/queue.o (.text .data)
    obj_cf/freertos/list.o (.text .data)
    obj_cf/freertos/heap_2.o (.text .data)
    obj_cf/freertos/heap_2b.o (.text .data)
    obj_cf/freertos/port.o (.text .data)
    obj_cf/usb_dev/msc.o (.text .data)
    obj_cf/usb_dev/msc_desc.o (.text .data)
    obj_cf/usb_dev/usb.o (.text .data)
    obj_cf/ac97/control.o (.text .data)
    obj_cf/ac97/ac97_codec.o (.text .data)
    obj_cf/ac97/mcf548x_ac97.o (.text .data)
    *(.data)
    _edata  =  .;
    __edata  =  .;
  } > flash2
  .text :
  {
    *(.text)
    _etext = .;
    __etext = .;
  } > flash
  .freertos :
  {
    __bss_start_freertos = .;
    obj_cf/freertos/tasks.o (.bss COMMON)
    obj_cf/freertos/queue.o (.bss COMMON)
    obj_cf/freertos/list.o (.bss COMMON)
    obj_cf/freertos/heap_2.o (.bss COMMON)
    obj_cf/freertos/heap_2b.o (.bss COMMON)
    obj_cf/freertos/port.o (.bss COMMON)
    obj_cf/lwip/tcp_out.o (.bss COMMON)
    obj_cf/lwip/inet.o (.bss COMMON)
    obj_cf/lwip/chksum.o (.bss COMMON)
    obj_cf/lwip/mem.o (.bss COMMON)
    obj_cf/lwip/memp.o (.bss COMMON)
    obj_cf/lwip/netif.o (.bss COMMON)
    obj_cf/lwip/pbuf.o (.bss COMMON)
    obj_cf/lwip/raw.o (.bss COMMON)
    obj_cf/lwip/stats.o (.bss COMMON)
    obj_cf/lwip/sys.o (.bss COMMON)
    obj_cf/lwip/tcp.o (.bss COMMON)
    obj_cf/lwip/tcp_in.o (.bss COMMON)
    obj_cf/lwip/udp.o (.bss COMMON)
    obj_cf/lwip/ip.o (.bss COMMON)
    obj_cf/lwip/ip_addr.o (.bss COMMON)
    obj_cf/lwip/icmp.o (.bss COMMON)
    obj_cf/lwip/ip_frag.o (.bss COMMON)
    obj_cf/lwip/tcpip.o (.bss COMMON)
    obj_cf/lwip/api_msg.o (.bss COMMON)
    obj_cf/lwip/err.o (.bss COMMON)
    obj_cf/lwip/api_lib.o (.bss COMMON)
    obj_cf/lwip/loopif.o (.bss COMMON)
    obj_cf/lwip/sockets.o (.bss COMMON)
    obj_cf/lwip/etharp.o (.bss COMMON)
    obj_cf/lwip/resolv.o (.bss COMMON)
    obj_cf/lwip/sys_arch.o (.bss COMMON)
    obj_cf/lwip/nbuf.o (.bss COMMON)
    obj_cf/lwip/fec.o (.bss COMMON)
    obj_cf/lwip/bcm5222.o (.bss COMMON)
    obj_cf/lwip/gs_func.o (.bss COMMON)
    obj_cf/lwip/gs_mem.o (.bss COMMON)
    obj_cf/lwip/gs_stik.o (.bss COMMON)
    obj_cf/lwip/intel_c3_flash.o (.bss COMMON)
    obj_cf/lwip/tftp.o (.bss COMMON)
    obj_cf/lwip/ftpd.o (.bss COMMON)
    obj_cf/lwip/web.o (.bss COMMON)
    obj_cf/lwip/gif.o (.bss COMMON)
    obj_cf/lwip/init.o (.bss COMMON)
    obj_cf/dma_utils/dma_utils.o (.bss COMMON)
    obj_cf/mcdapi/MCD_dmaApi.o (.bss COMMON)
    obj_cf/mcdapi/MCD_tasksInit.o (.bss COMMON)
    obj_cf/mcdapi/MCD_tasks.o (.bss COMMON)
    obj_cf/bdos/bdos.o (.bss COMMON)
    obj_cf/stdlib.o (.bss COMMON)
    obj_cf/printk.o (.bss COMMON)
    __end_freertos = ALIGN(4);
  } > freertosram
  .bss :
  {
    __bss_start = .;
   *(.bss)
   *(COMMON)
   _end = ALIGN(4) ;
   __end = ALIGN(4) ;
  } > ram
}

