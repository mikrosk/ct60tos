# fVDI configuration
# $Id: fvdi.sys,v 1.2 2002/12/14 04:53:25 johan Exp $


# ----- Standard setup -----

#cookie nvdi=$0501
#cookie speedo
#vqgdos _FSM

# This is the path to fonts and drivers.
PATH = C:\gemsys

# Uncomment and modify this if you want to load another palette at
# startup time. The file must be 1536 bytes and contain 3 (RGB) * 256
# VDI palette values (0 - 1000). (This is a common palette file
# format.)
#palette c:\nvdi5.pal

# Tell fVDI the size of your screen, in mm. Recommended!
# A negative number can be given to specify a fixed DPI.
# Defaults to the approximate size of the picture on an SM124.
width 480
height 270

# If fVDI is not being started from the AUTO folder, comment this out. 
booted


# ----- Various fixes -----

# With this uncommented fVDI can use NVDI as a background VDI (for
# dealing with non-screen devices). Some strange problems still
# remain, though.
#nvdifix

# Some programs look in the lineA variables for certain information.
# Uncomment this to make fVDI do a few more changes there.
#lineafix

# With this uncommented fVDI will make the XBIOS report the correct
# screen address even if using a graphics card. There are still
# problems with this.
#xbiosfix


# ----- Advanced setup -----

# Specify the 'roundness' of circles/ellipses/arcs.
# The split number indicates how many lines will be drawn as a
# percentage of the largest ellipse radius. The min/max numbers
# make sure that not too few or too many lines are used.
# More lines will result in slower drawing.
# Defaults are as in the original VDI (the GPLed sources).
#arcsplit 25
#arcmin 8
#arcmax 256

# Uncomment this to force fVDI to make do with a single Trap #2
# bending. Normally fVDI tries to move itself forward in the vector
# chains, but this might cause trouble together with some other TSR.
#singlebend

# Unless this is uncommented, fVDI tries to allocate memory as itself
# rather than the calling application under normal TOS.
# This option might possibly be useful if fVDI is launched before
# MiNT.
#nopidalloc

# If this is uncommented, fVDI will refrain from keeping a list of all
# allocated memory blocks. This option is useful if fVDI is launched
# before MiNT running with memory protection.
#nomemlink

# Uncomment this to disable all the VDI vector functions (vex_).
#novex

# Uncomment this to force fVDI to not rely on a previous VDI.
# For now, this will mean no mouse support...
#standalone

# The number of internal memory blocks allocated.
# Defaults to two, and there should normally be no reason to change
# that setting.
#blocks 2

# The size of the internal memory blocks in kbyte.
# Defaults to ten, which should normally be enough.
#blocksize 10


# ----- Debug setup -----

# This will turn on a few debug features in fVDI if uncommented.
# If something bombs, the information given at startup (this is before
# fVDI is running, so it will be on the normal Atari screen) using
# this, together with what for example ERR_RPRT.PRG shows, is very
# useful.
# Multiple 'debug' turns on more debug output/features.
#debug debug debug

# This enables interactive debugging if uncommented.
# fVDI will stop and wait for key presses after displaying debug
# output. See the development documentation for more information.
#interactive

# Uncomment this one if you want the debug output to go somewhere else
# than the screen. The number is a BIOS (Bconout) device, where the
# most useful ones are the parallel port (0), the serial port (1), and
# the midi port (3). Use -1 for ARAnyM console output and -2 to return
# to the default (screen output via Cconws).
debugout -2

# The size of the VDI call log in kbyte.
# Defaults to 4, but is neither allocated nor used without 'debug'.
#logsize 100

# Uncomment this one to use the mouse routines from the old VDI.
# You will also need to add the same switch to the configuration line
# of the driver being used.
#oldmouse

# To test the boot code without actually rebooting the system, it can
# be useful to uncomment the following. With this enabled, no previous
# virtual workstations will be copied by fVDI. They will actually continue
# to be handled by the old VDI
#fakeboot

# For testing purposes it can be useful to make fVDI available in
# parallel with the normal VDI. See the documentation for information.
#disable


# ----- Interactive setup -----

# Uncomment and change to set up a default key (reported if none is
# pressed). A device driver (or exitkey/casekey) can ask for this
# value later on.
setkey f

# Uncomment and change to write any text to the screen.
# Note the quotes!
echo "Press q to skip fVDI"

# Uncomment and change to wait for a key (for a specified number of
# seconds). A device driver (or exitkey/casekey) can ask for this
# value later on.
waitkey 3

# Uncomment and change to specify a key for quitting fVDI immediately.
exitkey q

# Uncomment to exchange the last key pressed with a stored one.
#swapkey

# Depending on the stored key, a jump to a later place in the file can
# be done. The place must be marked by the same text as the second
# parameter below, followed by a ':'.
#casekey m monochrome


# ----- Driver configuration -----

# Common driver initialization options (any driver can add to these):
# accelerate xxxxxxx
#     Any soft- or hardware accelerations can be turned off using the
#     'accelerate xxxxxxx' option. For any 'x' that is replaced by a
#     '-' or a '0', the corresponding accelerated function will be
#     turned off. 
#     If this option is not used, all acceleration will be on.
#     Acceleration possibilities (in order):
#        line expand fillpoly fill blit text mouse
# oldmouse
#     Well, this switch is actually needed here too.

# The standard software accelerated drivers all recognize
# shadow
#     Use a separate buffer of the screen in RAM. This is not useful
#     unless you have a really fast processor ('040) and RAM that can
#     be accessed much faster than the screen.

# The Radeon driver recognizes
# mode WIDTHxHEIGHTxDEPTH@FREQUENCY
#     Sets a mode as close to (but not higher) the given numbers as
#     possible.
#     Remove this option for use boot screen.
# monitor_layout CHOICES
#     Set monitor layout, CHOICES are for monitor 1  or monitor 1,2:
#     CRT  (VGA for monitor 1)
#     TMDS (DVI for monitor 1)
#     LVDS
#     TMDS,CRT (DVI for monitor 1, VGA for monitor 2)
#     CRT,TMDS (VGA for monitor 1, DVI for monitor 2)
#     etc...
#     Remove this option for automatic monitor detection, seems better 
#     for probe monitors on Radeon 7000
#     The best is to put the same value than the boot.
# ignore_edid
#     Ignore EDID data when doing DDC probe.
# mirror
#     Mirror the display to both monitors.
# virtual
#     Enable virtual screen: double height/with if possible, max 2048 x 2048.
# zoom_mouse NUMBER
#     Zoom mouse X1, X2, or X4 (with NUMBER 1, 2, or 4).
# setscreen
#     Use TOS XBIOS Vsetscreen for change screen.
# debug
#     Turn on debugging aids.

fonts = c:\gemsys\ttf

size 8 10 12 16 36
size 36 48 24
size 64
size 6

# fVDI should be able to deal with any standard fonts.
# Just list what you want to use below the driver definition.
# You specify a system font by adding an 's' before the font
# filename. If you do not specify a system font, fVDI will use the
# default one (from the ROM).
# It is a very good idea to have a system font in the same sizes as
# the normal GEM one, but it is not necessary.

#01r 1plane.sys
#01r 4plane.sys
#01r 16bit.sys shadow oldmouse accelerate xxxxxx-
#01r rage.sys pcibios mode key imgcache screencache accelerate xxxxxxx

#01r radeon.sys mode 1920x1080x32@60 monitor_layout CRT,TMDS debug
01r radeon.sys mode 1920x1080x16@60 accelerate xxxxxxx setscreen
#01r radeon.sys accelerate xxxxxxx setscreen
#s MONACO08.FNT
#s MONACO09.FNT
#s MONACO10.FNT
#s MONACO20.FNT
